apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deploy
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: {{ .Values.postgres.image }}

        ports:
        - containerPort: {{ .Values.postgres.containerPort }}

        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data

        envFrom:
        - configMapRef:
            name: postgres-config
        - secretRef:
            name: postgres-secret

        startupProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
          failureThreshold: 30
          periodSeconds: 10

        livenessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
          initialDelaySeconds: 10
          periodSeconds: 10
        
        readinessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
          initialDelaySeconds: 5
          periodSeconds: 5

        resources:
          requests:
            cpu: {{ .Values.postgres.resources.requests.cpu }}
            memory: {{ .Values.postgres.resources.requests.memory }}
          limits: 
            cpu: {{ .Values.postgres.resources.limits.cpu }}
            memory: {{ .Values.postgres.resources.limits.memory }}

      volumes:
      - name: postgres-storage
        hostPath:
          path: {{ .Values.postgres.volume.path }}
          type: DirectoryOrCreate
